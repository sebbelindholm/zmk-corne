#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include "keys_se_finland_sweden.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        mod_tap_idle: mod_tap_idle {
            compatible = "zmk,behavior-hold-tap";
            label = "MOD_TAP_IDLE";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            require-prior-idle-ms = <100>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp ESC        &kp Q                     &kp W                  &kp E                     &kp R                       &kp T                                      &mmv MOVE_UP                     &kp Y        &kp U                        &kp I                      &kp O                          &kp P                                &kp SE_A_RING
&kp TAB        &mod_tap_idle LEFT_ALT A  &mod_tap_idle LCTRL S  &mod_tap_idle LEFT_GUI D  &mod_tap_idle LEFT_SHIFT F  &kp G                      &mmv MOVE_LEFT  &mkp MB1        &mmv MOVE_RIGHT  &kp H        &mod_tap_idle RIGHT_SHIFT J  &mod_tap_idle RIGHT_GUI K  &mod_tap_idle RIGHT_CONTROL L  &mod_tap_idle RIGHT_ALT SE_O_UMLAUT  &kp SE_A_UMLAUT
&kp LESS_THAN  &kp Z                     &kp X                  &kp C                     &mt V V                     &kp B        &kp K_MUTE                    &mmv MOVE_DOWN                   &kp N        &kp M                        &kp SE_COMMA               &kp SE_DOT                     &kp SE_MINUS                         &kp SE_TILDE
                                                                &kp LGUI                  &mo 1                       &lt 3 SPACE                                                                 &lt 3 ENTER  &mo 2                        &kp BACKSPACE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&trans           &kp SE_N1       &kp SE_N2     &kp SE_N3     &kp SE_N4     &kp SE_N5                                &kp UP_ARROW             &kp SE_N6        &kp SE_N7                      &kp SE_N8        &kp SE_N9        &kp SE_N0     &kp SE_PLUS
&trans           &trans          &trans        &trans        &trans        &bt BT_SEL 3                   &kp LEFT  &kp RETURN    &kp RIGHT  &mkp RCLK        &trans                         &trans           &trans           &trans        &kp PG_UP
&rgb_ug RGB_TOG  &bt BT_CLR_ALL  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &rgb_ug RGB_EFF  &kp C_MUTE              &kp DOWN                 &rgb_ug RGB_EFR  &rgb_ug RGB_COLOR_HSB(0,0,99)  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &kp SE_COLON  &kp PG_DN
                                               &trans        &trans        &trans                                                            &trans           &trans                         &trans
            >;

            sensor-bindings = <&rgb_encoder>;
        };

        raise_layer {
            display-name = "SYMBOL";
            bindings = <
&trans  &kp SE_EXCL   &kp SE_AT     &kp SE_HASH  &kp SE_DLLR  &kp SE_PRCNT                            &mmv MOVE_UP                     &kp SE_AMPS   &kp SE_SLASH  &kp SE_LEFT_PARENTHESIS  &kp SE_RPAR  &kp ASTRK    &kp SE_BACKSLASH
&trans  &bt BT_CLR    &mkp LCLK     &mkp MCLK    &mkp RCLK    &mkp MB4                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp SE_MINUS  &kp SE_EQUAL  &kp SE_LBKT              &kp SE_RBKT  &kp BSLH     &kp GRAVE
&trans  &out OUT_USB  &out OUT_BLE  &none        &none        &mkp MB5      &trans                    &mmv MOVE_DOWN                   &kp SE_UNDER  &kp SE_PLUS   &kp SE_LBRC              &kp SE_RBRC  &kp SE_PIPE  &kp SE_COLON
                                    &trans       &trans       &kp SPACE                                                                &kp RET       &trans        &trans
            >;

            sensor-bindings = <&inc_dec_kp PAGE_DOWN PAGE_UP>;
        };

        layer_3 {
            display-name = "Fn";
            bindings = <
&studio_unlock  &kp F1      &kp F2  &kp F3       &kp F4   &kp F5                                 &mmv MOVE_UP                     &kp F6       &kp SE_N7  &kp SE_N8  &kp SE_N9  &trans           &kp DEL
&trans          &kp F6      &kp F7  &kp F8       &kp F9   &kp F10                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &bootloader  &kp SE_N4  &kp SE_N5  &kp SE_N6  &kp PRINTSCREEN  &trans
&trans          &sys_reset  &trans  &bootloader  &kp F11  &kp F12  &kp C_MUTE                    &mmv MOVE_DOWN                   &kp SE_N0    &kp SE_N1  &kp SE_N2  &kp SE_N3  &kp SCROLLLOCK   &trans
                                    &trans       &trans   &trans                                                                  &trans       &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
